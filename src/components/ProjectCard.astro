---
import { Image } from 'astro:assets';
import { Icon } from 'astro-icon/components';
import ProjectInfo from './ProjectInfo.tsx';

export interface Props {
  title: string;
  image: any; // ! @@@@@ fix - string | ImageMetadata; import type { ImageMetadata } from 'astro';
  imageAlt: string;
  icons?: Project[];
}

export type Project = {
  iconName: string;
  description?: string;
  href?: string;
  iconClass?: string;
  title?: string;
};

const { title, image, imageAlt, icons } = Astro.props;
---

<article
  class="my-4 max-w-[calc(100%-32px)] rounded-2xl border border-zinc-700 md:m-4 md:w-[calc(33%-32px)]"
>
  <Image
    src={image}
    width={276}
    height={200}
    alt={imageAlt}
    title={title}
    class="mx-auto flex h-[200px] rounded-t-2xl"
  />

  <h3 class="my-4 text-center text-lg font-semibold tracking-tight text-zinc-100">{title}</h3>

  <div class="mb-6 flex w-full items-center justify-evenly">
    {
      icons?.map((icon) => {
        if (icon.href)
          return (
            <a
              href={icon.href}
              target="_blank"
              rel="noopener noreferrer"
              class="cursor-pointer rounded-full text-white hover:text-zinc-300"
            >
              <p class="hidden">Click the link to navigate to {icon.href}</p>
              <Icon
                name={icon.iconName}
                class={`h-6 w-6${icon.iconClass ? ` ${icon.iconClass}` : ''}`}
                title={icon.title}
              />
            </a>
          );

        if (icon.description)
          return (
            <ProjectInfo description={icon.description} client:visible>
              <Icon name={icon.iconName} class="h-6 w-6 text-white hover:text-zinc-300" />
            </ProjectInfo>
          );

        return (
          <Icon
            name={icon.iconName}
            class={`h-6 w-6${icon.iconClass ? ` ${icon.iconClass}` : ''}`}
            title={icon.title}
          />
        );
      })
    }
  </div>
</article>
